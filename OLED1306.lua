-- ***************************************************************************
-- Graphics Test
--
-- This script executes several features of u8glib to test their Lua bindings.
--
-- Note: It is prepared for SSD1306-based displays. Select your connectivity
--       type by calling either init_i2c_display() or init_spi_display() at
--       the bottom of this file.
--
-- ***************************************************************************
-- setup I2c and connect display

da=string.char(0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x02,0xFC,0xFF,
0x07,0x00,0x02,0x00,0x00,0x06,0x00,0x00,0x06,0x00,0x00,0x0A,0x00,0x00,0x0B,0x00,0x00,0x11,0x00,0x80,
0x11,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x20,0x80,0x01,0x18,0x00,0x03,0x06,0x00,0x00,0x00,0x00,0x00)

bai =string.char(0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x03,0x00,0x00,0x01,0x00,0x80,0x00,0x00,0xF0,0xFF,0x01,0x10,0x00,
0x01,0x10,0x00,0x01,0x10,0x00,0x01,0x10,0x00,0x01,0xF0,0xFF,0x01,0x10,0x00,0x01,0x10,0x00,0x01,0x10,
0x00,0x01,0x10,0x00,0x01,0x10,0x00,0x01,0xF0,0xFF,0x01,0x10,0x00,0x01,0x10,0x00,0x00,0x00,0x00,0x00)

cai=string.char(0x00,0x00,0x00,0x80,0x08,0x00,0x80,0x10,0x02,0xFC,0xFF,0x07,0x80,0x10,0x00,0x80,0xC8,0x00,0x00,0xFE,
0x00,0xF8,0x41,0x00,0x10,0xC2,0x00,0x20,0x44,0x00,0x20,0x24,0x00,0x00,0x16,0x02,0xFC,0xF6,0x07,0x00,
0x0F,0x00,0x80,0x16,0x00,0x40,0x26,0x00,0x30,0xC6,0x00,0x0C,0x06,0x03,0x02,0x02,0x00,0x00,0x00,0x00)



dan=string.char(0x08,0x08,0x10,0x04,0x20,0x02,0xFC,0x1F,0x84,0x10,0x84,0x10,0xFC,0x1F,0x84,0x10,
0x84,0x10,0xFC,0x1F,0x80,0x00,0x80,0x00,0xFF,0x7F,0x80,0x00,0x80,0x00,0x80,0x00)

jia=string.char(0x10,0x02,0x10,0x02,0x10,0x05,0x08,0x05,0x88,0x08,0x4C,0x10,0x2C,0x60,0x8A,0x08,
0x89,0x08,0x88,0x08,0x88,0x08,0x88,0x08,0x88,0x08,0x48,0x08,0x48,0x08,0x28,0x08)


yuan=string.char(0x00,0x00,0xFC,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x7F,0x20,0x02,0x20,0x02,
0x20,0x02,0x20,0x02,0x10,0x02,0x10,0x42,0x08,0x42,0x04,0x42,0x02,0x7C,0x01,0x00
)

wei=string.char(0x10,0x01,0x10,0x02,0x10,0x02,0x08,0x00,0xE8,0x3F,0x0C,0x00,0x0C,0x10,0x4A,0x10,
0x49,0x10,0x88,0x08,0x88,0x08,0x88,0x08,0x88,0x04,0x08,0x04,0xF8,0x7F,0x08,0x00)

ge=string.char(0x80,0x00,0x80,0x00,0x40,0x01,0x20,0x02,0x10,0x04,0x08,0x08,0x84,0x10,0x83,0x60,
0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00,0x80,0x00)

t=string.char(
0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x84,0x00,0x84,0x00,0x02,0x01,0x02,0x01
,0x02,0x01,0x02,0x01,0x02,0x01,0x02,0x01,0x02,0x01,0x02,0x01,0x84,0x00,0x84,0x00,
0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00
)
function init_i2c_display()
    -- SDA and SCL can be assigned freely to available GPIOs
    local sda = 5
    local scl = 4
    local sla = 0x3c
    i2c.setup(0, sda, scl, i2c.SLOW)
    disp = u8g2.ssd1306_i2c_128x64_noname(0, sla)
    print("IIC Setup Succe")
    init_display("4.30")
end

function init_display(price)
   local pixelH=64
   local pixelW=128
   local center=pixelW/2
   local NameFontSize=20
   local NumFontSize=16
   local NumFontWidth=NumFontSize/2
   u8g2_prepare()
   disp:clearBuffer()
   
   disp:drawXBM(center-NameFontSize, 0, NameFontSize, NameFontSize, da)
   disp:drawXBM(center, 0, NameFontSize, NameFontSize, bai)
   disp:drawXBM(center+NameFontSize, 0, NameFontSize, NameFontSize, cai)

   disp:drawStr(center, 25,price);
   disp:drawXBM(center+(NumFontWidth*5),25, NumFontSize, NumFontSize, yuan)
    
   disp:drawXBM(center-(NumFontSize*2),45, NumFontSize, NumFontSize, dan)
   disp:drawXBM(center-NumFontSize,45,NumFontSize, NumFontSize, wei)
   disp:drawStr(center,45,":500g")
   disp:sendBuffer()
end

function u8g2_prepare()
  disp:setFont(u8g2.font_6x10_tf)
  --disp:setFont(u8g2.font_6x10_tf)
  disp:setFontRefHeightExtendedText()
  disp:setDrawColor(1)
  disp:setFontPosTop()
  disp:setBitmapMode(0) -- solid
  disp:setFontDirection(0)
end

